# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
import publicService_pb2 as publicService__pb2


class PublicServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAssetPairs = channel.unary_unary(
                '/hft.PublicService/GetAssetPairs',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=publicService__pb2.AssetPairsResponse.FromString,
                )
        self.GetAssetPair = channel.unary_unary(
                '/hft.PublicService/GetAssetPair',
                request_serializer=publicService__pb2.AssetPairRequest.SerializeToString,
                response_deserializer=publicService__pb2.AssetPairResponse.FromString,
                )
        self.GetAssets = channel.unary_unary(
                '/hft.PublicService/GetAssets',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=publicService__pb2.AssetsResponse.FromString,
                )
        self.GetAsset = channel.unary_unary(
                '/hft.PublicService/GetAsset',
                request_serializer=publicService__pb2.AssetRequest.SerializeToString,
                response_deserializer=publicService__pb2.AssetResponse.FromString,
                )
        self.GetOrderbooks = channel.unary_unary(
                '/hft.PublicService/GetOrderbooks',
                request_serializer=publicService__pb2.OrderbookRequest.SerializeToString,
                response_deserializer=publicService__pb2.OrderbookResponse.FromString,
                )
        self.GetTickers = channel.unary_unary(
                '/hft.PublicService/GetTickers',
                request_serializer=publicService__pb2.TickersRequest.SerializeToString,
                response_deserializer=publicService__pb2.TickersResponse.FromString,
                )
        self.GetPrices = channel.unary_unary(
                '/hft.PublicService/GetPrices',
                request_serializer=publicService__pb2.PricesRequest.SerializeToString,
                response_deserializer=publicService__pb2.PricesResponse.FromString,
                )
        self.GetPublicTrades = channel.unary_unary(
                '/hft.PublicService/GetPublicTrades',
                request_serializer=publicService__pb2.PublicTradesRequest.SerializeToString,
                response_deserializer=publicService__pb2.PublicTradeUpdate.FromString,
                )
        self.GetPriceUpdates = channel.unary_stream(
                '/hft.PublicService/GetPriceUpdates',
                request_serializer=publicService__pb2.PriceUpdatesRequest.SerializeToString,
                response_deserializer=publicService__pb2.PriceUpdate.FromString,
                )
        self.GetTickerUpdates = channel.unary_stream(
                '/hft.PublicService/GetTickerUpdates',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=publicService__pb2.TickerUpdate.FromString,
                )
        self.GetOrderbookUpdates = channel.unary_stream(
                '/hft.PublicService/GetOrderbookUpdates',
                request_serializer=publicService__pb2.OrderbookUpdatesRequest.SerializeToString,
                response_deserializer=publicService__pb2.Orderbook.FromString,
                )
        self.GetPublicTradeUpdates = channel.unary_stream(
                '/hft.PublicService/GetPublicTradeUpdates',
                request_serializer=publicService__pb2.PublicTradesUpdatesRequest.SerializeToString,
                response_deserializer=publicService__pb2.PublicTradeUpdate.FromString,
                )


class PublicServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAssetPairs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssetPair(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAssets(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAsset(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrderbooks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTickers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPrices(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPublicTrades(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPriceUpdates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTickerUpdates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOrderbookUpdates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPublicTradeUpdates(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_PublicServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAssetPairs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetPairs,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=publicService__pb2.AssetPairsResponse.SerializeToString,
            ),
            'GetAssetPair': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssetPair,
                    request_deserializer=publicService__pb2.AssetPairRequest.FromString,
                    response_serializer=publicService__pb2.AssetPairResponse.SerializeToString,
            ),
            'GetAssets': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAssets,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=publicService__pb2.AssetsResponse.SerializeToString,
            ),
            'GetAsset': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAsset,
                    request_deserializer=publicService__pb2.AssetRequest.FromString,
                    response_serializer=publicService__pb2.AssetResponse.SerializeToString,
            ),
            'GetOrderbooks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOrderbooks,
                    request_deserializer=publicService__pb2.OrderbookRequest.FromString,
                    response_serializer=publicService__pb2.OrderbookResponse.SerializeToString,
            ),
            'GetTickers': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTickers,
                    request_deserializer=publicService__pb2.TickersRequest.FromString,
                    response_serializer=publicService__pb2.TickersResponse.SerializeToString,
            ),
            'GetPrices': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPrices,
                    request_deserializer=publicService__pb2.PricesRequest.FromString,
                    response_serializer=publicService__pb2.PricesResponse.SerializeToString,
            ),
            'GetPublicTrades': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPublicTrades,
                    request_deserializer=publicService__pb2.PublicTradesRequest.FromString,
                    response_serializer=publicService__pb2.PublicTradeUpdate.SerializeToString,
            ),
            'GetPriceUpdates': grpc.unary_stream_rpc_method_handler(
                    servicer.GetPriceUpdates,
                    request_deserializer=publicService__pb2.PriceUpdatesRequest.FromString,
                    response_serializer=publicService__pb2.PriceUpdate.SerializeToString,
            ),
            'GetTickerUpdates': grpc.unary_stream_rpc_method_handler(
                    servicer.GetTickerUpdates,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=publicService__pb2.TickerUpdate.SerializeToString,
            ),
            'GetOrderbookUpdates': grpc.unary_stream_rpc_method_handler(
                    servicer.GetOrderbookUpdates,
                    request_deserializer=publicService__pb2.OrderbookUpdatesRequest.FromString,
                    response_serializer=publicService__pb2.Orderbook.SerializeToString,
            ),
            'GetPublicTradeUpdates': grpc.unary_stream_rpc_method_handler(
                    servicer.GetPublicTradeUpdates,
                    request_deserializer=publicService__pb2.PublicTradesUpdatesRequest.FromString,
                    response_serializer=publicService__pb2.PublicTradeUpdate.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'hft.PublicService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class PublicService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAssetPairs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hft.PublicService/GetAssetPairs',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            publicService__pb2.AssetPairsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssetPair(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hft.PublicService/GetAssetPair',
            publicService__pb2.AssetPairRequest.SerializeToString,
            publicService__pb2.AssetPairResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAssets(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hft.PublicService/GetAssets',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            publicService__pb2.AssetsResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetAsset(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hft.PublicService/GetAsset',
            publicService__pb2.AssetRequest.SerializeToString,
            publicService__pb2.AssetResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrderbooks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hft.PublicService/GetOrderbooks',
            publicService__pb2.OrderbookRequest.SerializeToString,
            publicService__pb2.OrderbookResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTickers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hft.PublicService/GetTickers',
            publicService__pb2.TickersRequest.SerializeToString,
            publicService__pb2.TickersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPrices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hft.PublicService/GetPrices',
            publicService__pb2.PricesRequest.SerializeToString,
            publicService__pb2.PricesResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPublicTrades(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/hft.PublicService/GetPublicTrades',
            publicService__pb2.PublicTradesRequest.SerializeToString,
            publicService__pb2.PublicTradeUpdate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPriceUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/hft.PublicService/GetPriceUpdates',
            publicService__pb2.PriceUpdatesRequest.SerializeToString,
            publicService__pb2.PriceUpdate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetTickerUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/hft.PublicService/GetTickerUpdates',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            publicService__pb2.TickerUpdate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOrderbookUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/hft.PublicService/GetOrderbookUpdates',
            publicService__pb2.OrderbookUpdatesRequest.SerializeToString,
            publicService__pb2.Orderbook.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetPublicTradeUpdates(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/hft.PublicService/GetPublicTradeUpdates',
            publicService__pb2.PublicTradesUpdatesRequest.SerializeToString,
            publicService__pb2.PublicTradeUpdate.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
